
FUNCTION_BLOCK suitability

VAR_INPUT
	core_num :     REAL;
	gpu_speed:     REAL; //TFLOPS
	psu_wattage:   REAL; //WATT
	ram_capacity : REAL; //GB
	storage:       REAL; //TB
	vram:          REAL; //GB
END_VAR

VAR_OUTPUT
	use_casual  : REAL;
	use_gaming  : REAL;
	use_mining  : REAL;
	use_hosting : REAL;
	//use_work    : REAL;
END_VAR

FUZZIFY core_num
	TERM low    := (1, 1) (2, 1) (4, 0);
	TERM mid    := (2, 0) (4, 1) (8, 0);
	TERM high   := (4, 0) (8, 1) (16, 0);
	TERM v_high := (8, 0) (16, 1);
END_FUZZIFY

FUZZIFY ram_capacity
	TERM low    := (0, 1) (2, 1) (4, 0);
	TERM mid    := (2, 0) (4, 1) (8, 0);
	TERM high   := (4, 0) (8, 1) (16, 0);
	TERM v_high := (8, 0) (16, 1);
END_FUZZIFY

FUZZIFY storage
	TERM low    := (0, 1) (0.5, 1) (1, 0);
	TERM mid    := (0.5, 0) (1, 1) (2, 0);
	TERM high   := (1, 0) (2, 1);
END_FUZZIFY

FUZZIFY vram
	TERM low    := (0, 1) (2, 1) (4, 0);
	TERM mid    := (2, 0) (4, 1) (8, 0);
	TERM high   := (4, 0) (8, 1) (16, 0);
	TERM v_high := (8, 0) (16, 1);
END_FUZZIFY

FUZZIFY psu_wattage
	TERM low    := (0, 1) (300, 1) (400, 0);
	TERM mid    := (300, 0) (400, 1) (600, 0);
	TERM high   := (600, 0) (800, 1) (1000, 0);
	TERM v_high := (800, 0) (1200, 1);
END_FUZZIFY

FUZZIFY gpu_speed
	TERM low    := (0, 1) (3, 1) (6, 0);
	TERM mid    := (3, 0) (6, 1) (10, 0);
	TERM high   := (6, 0) (10, 1) (20, 0);
	TERM v_high := (10, 0) (30, 1);
END_FUZZIFY


DEFUZZIFY use_casual
	TERM low     := (0,  1) (50, 0);
	TERM mid     := (0, 0) (50, 1) (100, 0);
	TERM high    := (50, 0) (100, 1);
	
	METHOD : COG;		// 'Center Of Gravity' odn. centar mase (koristi se i MM odn. mean max)
	DEFAULT := 0;		// podrazumevana vrednost (ukoliko nijedno pravilo nije aktivirano)
END_DEFUZZIFY

DEFUZZIFY use_gaming
	TERM low     := (0,  1) (25, 1) (50,  0);
	TERM mid     := (25, 0) (50, 1) (75,  0);
	TERM high    := (50, 0) (75, 1) (100, 1);
	
	METHOD : COG;		// 'Center Of Gravity' odn. centar mase (koristi se i MM odn. mean max)
	DEFAULT := 0;		// podrazumevana vrednost (ukoliko nijedno pravilo nije aktivirano)
END_DEFUZZIFY

DEFUZZIFY use_hosting
	TERM low     := (0,  1) (50, 0);
	TERM mid     := (0, 0) (50, 1) (100, 0);
	TERM high    := (50, 0) (100, 1);
	
	METHOD : COG;		// 'Center Of Gravity' odn. centar mase (koristi se i MM odn. mean max)
	DEFAULT := 0;		// podrazumevana vrednost (ukoliko nijedno pravilo nije aktivirano)
END_DEFUZZIFY

DEFUZZIFY use_mining
	TERM low     := (0,  1) (50, 0);
	TERM mid     := (0, 0) (50, 1) (100, 0);
	TERM high    := (50, 0) (100, 1);
	
	METHOD : COG;		// 'Center Of Gravity' odn. centar mase (koristi se i MM odn. mean max)
	DEFAULT := 0;		// podrazumevana vrednost (ukoliko nijedno pravilo nije aktivirano)
END_DEFUZZIFY

RULEBLOCK casual_block
	AND  : MIN;
	ACT  : MIN;
	ACCU : MAX;
	
	RULE 1 : IF (core_num IS low) THEN use_casual IS low WITH 0.25;
	RULE 2 : IF (core_num IS mid) OR (core_num IS high) OR (core_num IS v_high) THEN use_casual IS high WITH 0.25;
	
	RULE 3 : IF (ram_capacity IS low) THEN use_casual IS low with 0.75;
	RULE 4 : IF (ram_capacity IS mid) THEN use_casual IS mid with 0.75;
	RULE 5 : IF (ram_capacity IS high) OR (ram_capacity IS v_high) THEN use_casual IS high with 0.75;
	
	RULE 6 : IF (storage IS low) THEN use_casual IS low WITH 0.5;
	RULE 7 : IF (storage IS mid) OR (storage is high) THEN use_casual IS high WITH 0.5;
	
	RULE 8 : IF (psu_wattage IS low) THEN use_casual IS low WITH 0.125;
END_RULEBLOCK


RULEBLOCK gaming_block
	AND  : MIN;
	ACT  : MIN;
	ACCU : MAX;
	
	RULE 1 : IF (core_num IS low) OR (ram_capacity IS low) OR (ram_capacity IS mid) OR (vram IS low) OR (psu_wattage IS low) OR
			    (gpu_speed IS low) THEN use_gaming IS low WITH 1;
	
	RULE 2 : IF (core_num IS mid) THEN use_gaming IS mid WITH 0.125;
	RULE 3 : IF (core_num IS high) OR (core_num IS v_high) THEN use_gaming IS high WITH 0.125;
	
	RULE 4 : IF (ram_capacity IS high) THEN use_gaming is mid WITH 0.375;
	RULE 5 : IF (ram_capacity IS v_high) THEN use_gaming is high WITH 0.375;
	
	RULE 6 : IF (vram IS mid) THEN use_gaming is mid WITH 0.375;
	RULE 7 : IF (vram IS high OR vram IS v_high) THEN use_gaming is high WITH 0.375;
	
	RULE 8 : IF (gpu_speed IS mid) THEN use_gaming is mid WITH 0.375;
	RULE 9 : IF (gpu_speed IS high OR gpu_speed IS v_high) THEN use_gaming is high WITH 0.375;
	
	RULE 10 : IF (psu_wattage IS mid) THEN use_gaming IS mid WITH 0.125;
	RULE 11 : IF (psu_wattage IS high) OR (psu_wattage IS v_high) THEN use_gaming IS high WITH 0.125;
END_RULEBLOCK


RULEBLOCK hosting_block
	AND  : MIN;
	ACT  : MIN;
	ACCU : MAX;
	
	RULE 1 : IF (core_num IS low) OR (core_num IS mid) OR (ram_capacity IS low) OR (ram_capacity IS mid) OR (psu_wattage IS low) THEN use_hosting IS low WITH 1;
	
	RULE 2 : IF (core_num IS high) THEN use_hosting IS mid WITH 0.25;
	RULE 3 : IF (core_num IS v_high) THEN use_hosting IS high WITH 0.25;
	
	RULE 4 : IF (ram_capacity IS high) THEN use_hosting is mid WITH 0.25;
	RULE 5 : IF (ram_capacity IS v_high) THEN use_hosting is high WITH 0.25;
	
	RULE 6 : IF (psu_wattage IS mid) THEN use_hosting IS mid WITH 0.125;
	RULE 7 : IF (psu_wattage IS high) OR (psu_wattage IS v_high) THEN use_hosting IS high WITH 0.125;
END_RULEBLOCK


RULEBLOCK mining_block
	AND  : MIN;
	ACT  : MIN;
	ACCU : MAX;
	
	RULE 1 : IF (core_num IS low) OR (ram_capacity IS low) OR (psu_wattage IS low) OR (vram IS low) OR (vram IS mid) OR
				(gpu_speed IS NOT high AND gpu_speed IS NOT v_high AND (gpu_speed IS low OR gpu_speed IS mid)) THEN use_mining IS low WITH 1;
	
	RULE 2 : IF (core_num IS high) THEN use_mining IS high WITH 0.05;
	
	RULE 3 : IF (vram IS high) THEN use_mining IS mid WITH 0.1;
	RULE 4 : IF (vram IS v_high) THEN use_mining IS high WITH 0.1;
	
	RULE 5 : IF (gpu_speed IS high) THEN use_mining IS mid WITH 0.1;
	RULE 6 : IF (gpu_speed IS v_high) THEN use_mining IS high WITH 0.1;
	
	RULE 7 : IF (ram_capacity IS high) THEN use_mining is mid WITH 0.05;
	RULE 8 : IF (ram_capacity IS v_high) THEN use_mining is high WITH 0.05;
	
	RULE 9  : IF (psu_wattage IS mid) THEN use_mining IS mid WITH 0.1;
	RULE 10 : IF (psu_wattage IS high) OR (psu_wattage IS v_high) THEN use_mining IS high WITH 0.1;
END_RULEBLOCK


//RULEBLOCK blok1
//	AND : MIN;			// za konjunkciju se koristi minimum (samim tim sa za disjunkciju koristi maksimum)
//	ACT : MIN;			// za zakljuƒçivanje (implikaciju) je izabran minimum (Mamdani implikacija) (osim MIN koristi se i PROD)
//	ACCU : MAX;			// za kompoziciju je izabran maksimum (osim MAX koristi se i SUM)

//	RULE 1 : IF ulazna_varijabla_1 IS var1_element_1 THEN izlazna_varijabla IS element_1;
//	RULE 2 : IF ulazna_varijabla_1 IS var1_element_2 AND ulazna_varijabla_2 IS var1_element_1 THEN izlazna_varijabla IS element_2;
//	RULE 3 : IF ulazna_varijabla_2 IS var1_element_1 THEN izlazna_varijabla IS element_1 WITH 0.5;
//	RULE 4 : IF ulazna_varijabla_2 IS var1_element_2 THEN izlazna_varijabla IS element_2 WITH 0.5;
//END_RULEBLOCK

END_FUNCTION_BLOCK

